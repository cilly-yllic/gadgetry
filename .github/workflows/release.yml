name: Release

on:
  pull_request:
    branches:
      - main
    types: [closed]

env:
  NODE_VERSION_FILE: .nvmrc
  NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}

      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm ci

      - name: Get Tag Name
        uses: ./.github/actions/get-tag-name
        id: get-tag-name
      - name: Create Tag
        uses: actions/github-script@v7
        env:
          TAG: '${{ steps.get-tag-name.outputs.tag-name }}'
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.get-tag-name.outputs.tag-name }}",
              sha: context.sha
            })
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-tag-name.outputs.tag-name }}
          name: 'v${{ steps.get-tag-name.outputs.tag-name }}'
          body: '${{github.event.pull_request.body}}'
          draft: false
          prerelease: false
  publish-npm:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          registry-url: https://registry.npmjs.org
      - run: npm ci
      - run: npm run publish:build
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ env.NPM_ACCESS_TOKEN }}
